{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;\red5\green99\blue193;}
{\*\listtable 
{\list\listhybrid
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f1\jclisttab\tx0}
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f1\jclisttab\tx0}\listid1 }}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\*\generator Riched20 10.0.10586}{\*\mmathPr\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\nowidctlpar\sa200\sl276\slmult1\b\f0\fs28\lang9 WorldCitizenIDKit Overview \fs22\par
\b0 The purpose of this document is to review the code found at {{\field{\*\fldinst{HYPERLINK "https://github.com/HardBTC/WorldCitizenIDKit" }}{\fldrslt{\ul\cf1\cf2\ul WorldCitizenIDKit}}}}\f0\fs22  at the time of writing and confirm that it behaves as described. Communication should only be established with the {\lang1033{\field{\*\fldinst{HYPERLINK "https://proofofexistence.com" }}{\fldrslt{\ul\cf1\cf2\ul Proof of Existence}}}}\f0\fs22\lang1033  API in order to add a hash of the user supplied file or a hash of the PGP signature of the file to the Bitcoin Blockchain. \par
\lang9\par
\b\fs28 Sign.html\par
\b0\fs22 All of the code in this document resides in the sign.html file. This file is made up of two main parts and is structured as follows.\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\nowidctlpar\fi-360\li720\sa200\sl276\slmult1\b UI\par
{\listtext\f0 1\tab}Scripts\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\ilvl1\nowidctlpar\fi-360\li1440\sa200\sl276\slmult1 jQuery\par
{\listtext\f0 1\tab}Bootstrap\par
{\listtext\f0 2\tab}OpenPGPjs\par
{\listtext\f0 3\tab}SJCL\par
{\listtext\f0 4\tab}PGP Signing\par

\pard\nowidctlpar\sa200\sl276\slmult1\b0 The UI is primarily made up of a standard CSS style sheet that originates from {{\field{\*\fldinst{HYPERLINK "http://getbootstrap.com" }}{\fldrslt{\ul\cf1\cf2\ul Bootstrap v3.3.6}}}}\f0\fs22  and the rest of this section is purely for user data input and interaction. The Scripts section of the file contains source code for five separate javascripts. The {{\field{\*\fldinst{HYPERLINK "https://code.jquery.com/jquery-1.11.3.min.js" }}{\fldrslt{\ul\cf1\cf2\ul jQuery}}}}\f0\fs22 , {{\field{\*\fldinst{HYPERLINK "https://github.com/twbs/bootstrap" }}{\fldrslt{\ul\cf1\cf2\ul Bootstrap}}}}\f0\fs22 , {{\field{\*\fldinst{HYPERLINK "https://github.com/openpgpjs/openpgpjs/archive/v2.0.0.zip" }}{\fldrslt{\ul\cf1\cf2\ul OpenPGPjs}}}}\f0\fs22 , and {{\field{\*\fldinst{HYPERLINK "http://bitwiseshiftleft.github.io/sjcl/" }}{\fldrslt{\ul\cf1\cf2\ul SJCL}}}}\f0\fs22  scripts have all been verified to match their original sources. We will consider these sources \ldblquote safe\rdblquote  and beyond the scope of this document. This leaves the PGP Signing script which is where the magic happens. The code in this script will be described below as to better understand the flow information that occurs.\par
\par
\b\fs28 PGP Signing and Generation Methods\par

\pard\nowidctlpar\li720\sa200\sl276\slmult1\b0\fs22 $('#file-choose').click \endash  Called when the user clicks the choose file button and allows them to choose a file for processing. Once a file is chosen it calls the $('#file-input').change function.\par
$('#file-input').change \endash  Determines the selected file\rquote s name and displays it to the user along with displaying a new portion of the UI for PGP Signing and Timestamping.\par
$('#pgp-form').submit \endash  Called when the Generate Signature button in PGP Signing form has been submitted. This reads the information from the selected file and calls sign() once loaded.\par
sign() \endash  This updates the submit button to a disabled state and informs the user the file is being loaded and signed. It then gets the user supplied private key, optional passphrase, and encoding information and makes use of OpenPGPjs to attempt to sign the file. The signature or appropriate error is then displayed to the user.\par
$('#timestamp-form').submit \endash  Called when the Generate Timestamp button has been clicked. This updates the button to a disabled state and informs the user the timestamp process has begun. If the user has selected to timestamp the file a call is made to timestampFile(). If the user has selected to timestamp the PGP signature and the signature has already been generated then a call is made to timestampPGP(), otherwise the user is told the PGP signature has not yet been created and enableGenerateTimestamp() is called.\par
enableGenerateTimestamp() \endash  This takes the Generate Timestamp button out of the loading state and enables it.\par
timestampFile() \endash  This function calculates the SHA256 digest of the user supplied file using the {{\field{\*\fldinst{HYPERLINK "http://bitwiseshiftleft.github.io/sjcl/" }}{\fldrslt{\ul\cf1\cf2\ul SJCL}}}}\f0\fs22  script. The filename and resulting hash is then passed to $('#timestamp-hash') and poe() is called.\par
timestampPGP() \endash  This function calculates the SHA256 digest of the previously calculated PGP signature of the user supplied file using the {{\field{\*\fldinst{HYPERLINK "http://bitwiseshiftleft.github.io/sjcl/" }}{\fldrslt{\ul\cf1\cf2\ul SJCL}}}}\f0\fs22  script. The filename and resulting hash is then passed to $('#timestamp-hash') and poe() is called.\par
poe() \endash  Using a Yahoo API a request is sent to register the hash previously set in either timestampFile() or timestampPGP(). This is request only contains the hash and is sent to the URL {{\field{\*\fldinst{HYPERLINK http://www.proofofexistence.com/api/v1/register }}{\fldrslt{http://www.proofofexistence.com/api/v1/register\ul0\cf0}}}}\f0\fs22 . The Proof of Existence API the returns the appropriate data. This return data consists of a Bitcoin address and amount of BTC that must be sent in order to add the hash to the blockchain. The UI is then updated to provide this information to the user or any error information. A call to {{\field{\*\fldinst{HYPERLINK https://chart.googleapis.com/ }}{\fldrslt{https://chart.googleapis.com/\ul0\cf0}}}}\f0\fs22  is made to visually format the BTC price. Upon success the Check Payment Status button is then enabled.\par
checkPOE() \endash  This is called to check the status of the bitcoin payment previously mentioned. Once again a Yahoo API is used to make a request. This request only contains the hash and is sent to the URL {{\field{\*\fldinst{HYPERLINK http://www.proofofexistence.com/api/v1/status }}{\fldrslt{http://www.proofofexistence.com/api/v1/status\ul0\cf0}}}}\f0\fs22 . The corresponding status of the payment is then displayed to the user. Upon successful payment the Proof of Existence API returns the timestamp information and is made available to the user for download.\par
$('#keys-form').submit \endash  This function exists in order to allow the user the option to generate their own private and public PGP keys. This is all done by way of OpenPGPjs.\par
download(), $('.download-signature'), $('.download-keys'), $('.download-timestamp') \endash  These functions are tied to buttons on the page and allow the user to download corresponding data.\par
\par

\pard\nowidctlpar\sa200\sl276\slmult1\b\fs28 Final Opinion\par
\b0\-\-\-\fs22 This code makes use of Yahoo and Google APIs that were not previously mentioned however given the nature of the data passed this seems to be irrelevant. The only information sent over the web are file or PGP signature hashes that will ultimately be stored publically on the Blockchain and shouldn\rquote t pose any threat. No other data seems to be sent or stored and the code behaves as described. Therefore to the best of my knowledge the code found at {{\field{\*\fldinst{HYPERLINK "https://github.com/HardBTC/WorldCitizenIDKit" }}{\fldrslt{\ul\cf1\cf2\ul WorldCitizenIDKit}}}}\f0\fs22  as of April 26\super th\nosupersub , 2016 poses no direct threat to user security.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
Disclaimer \endash  This document does not guarantee anything regarding the security of the aforementioned files.\par
Contact \endash  {{\field{\*\fldinst{HYPERLINK "mailto:Jakeinvents@gmail.com" }}{\fldrslt{\ul\cf1\cf2\ul Jake}}}}\f0\fs22 @apricitylabs.com , Apricity Labs LLC.\par
}
 